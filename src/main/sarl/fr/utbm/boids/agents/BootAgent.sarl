package fr.utbm.boids.agents

import io.sarl.core.Initialize
import io.sarl.core.Logging
import fr.utbm.boids.gui.fx.EndSimulation
import io.sarl.core.InnerContextAccess
import io.sarl.core.Lifecycle
import fr.utbm.boids.events.ConfigureSimulation
import fr.utbm.boids.events.CreateMap

agent BootAgent {
	uses Logging, InnerContextAccess, Lifecycle
	
	var map : int = 0
	var boidsQuantity : int
	var exited : boolean = false

	on Initialize {
		loggingName = "BootAgent-" + this.ID
		if(!occurrence.parameters.empty)
			this.map = occurrence.parameters.get(0) as Integer
		info("Starting simulation with map " + this.map)
		info("Configuration of the environment...")
	}
	
	on ConfigureSimulation {
		this.boidsQuantity = occurrence.boidsQuantity
		info(this.boidsQuantity)
	}
	
	on CreateMap {
		
	}

	on EndSimulation [!hasMemberAgent] {
		info("The simulation has ended.")
		killMe
	}
	
	on EndSimulation [hasMemberAgent && !exited] {
		exited = true
		innerContext.defaultSpace.emit(ID, new EndSimulation)
	}
}
