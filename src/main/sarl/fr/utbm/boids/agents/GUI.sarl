
package fr.utbm.boids.agents

import io.sarl.core.AgentKilled
import io.sarl.core.AgentSpawned
import io.sarl.core.ContextJoined
import io.sarl.core.ContextLeft
import io.sarl.core.Destroy
import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.MemberJoined
import io.sarl.core.MemberLeft
import io.sarl.core.DefaultContextInteractions
import java.util.Collection
import java.Math.*
import fr.utbm.boids.events.MakeTheFiestaBegin
import fr.utbm.boids.events.IsStarted
import fr.utbm.boids.events.BtnLaunch
import fr.utbm.boids.events.StartingSimulation
import fr.utbm.boids.events.EndSimulation
import fr.utbm.boids.events.BtnShutdown
import io.sarl.core.Lifecycle
import fr.utbm.boids.events.AgentLeft
import java.util.UUID
import java.util.TreeSet

agent GUI {
	uses Logging, DefaultContextInteractions, Lifecycle

	
	
	/*
	 * gestion des évènements
	 */

	on Initialize {
		loggingName = "GUI"
		info("The GUI is started.")
		emit(new IsStarted())
	}
	
	on MakeTheFiestaBegin {
		info("Début de la fiesta")
		
		
		/* TODO Delete fake simu launcher */
		emit(new BtnLaunch());
	}
	
	on BtnLaunch {
		val nbPop = 3
		val nbBoids = 20
		val visionBoids = 10
		emit(new StartingSimulation(nbPop, nbBoids, visionBoids))
	}
	
	/* TODO William : BtnShutdown */
	
	on BtnShutdown {
		val AgentsAlive = 0
		/* initialiser au nombre de fils dans context et space */
		emit(new EndSimulation())
	}
	
	on AgentLeft {
		if(/*tout seul dans context*/true){}
	}
}
