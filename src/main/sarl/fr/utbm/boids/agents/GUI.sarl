package fr.utbm.boids.agents

import io.sarl.core.Initialize
import io.sarl.core.Logging
import io.sarl.core.DefaultContextInteractions
import fr.utbm.boids.events.MakeTheFiestaBegin
import fr.utbm.boids.events.IsStarted
import fr.utbm.boids.events.BtnLaunch
import fr.utbm.boids.events.StartingSimulation
import fr.utbm.boids.events.EndSimulation
import fr.utbm.boids.events.BtnShutdown

import io.sarl.core.Schedules
import io.sarl.core.Lifecycle

agent GUI {
	uses Logging, DefaultContextInteractions, Schedules, Lifecycle

	/* -1 if not exiting the app // +x if we quit the app and x agents are alive */
	var AgentsAlive = -1 
	/*
	 * gestion des évènements
	 */

	on Initialize {
		loggingName = "GUI"
		info("The GUI is started.")
		emit(new IsStarted("GUI"))
	}
	
	on MakeTheFiestaBegin {
		info("Début de la fiesta")
		
		
		/* TODO Delete fake simu launcher */
		emit(new BtnLaunch());
	}
	
	on BtnLaunch {
		val nbPop = 3
		val nbBoids = 20
		val visionBoids = 10
		val freqRafraichissement = 1
		emit(new StartingSimulation(nbPop, nbBoids, visionBoids, freqRafraichissement))
		in(10000)[
			emit(new BtnShutdown)
		]
	}
	
	on BtnShutdown {
		AgentsAlive = 3
		/* initialiser au nombre de fils dans context et space */
		emit(new EndSimulation())
	}

	on EndSimulation {
		info('GUI kill')
		killMe
	}

	/*on AgentKilled {
		AgentsAlive -= 1
		if (AgentsAlive == 0){
			killMe
		}
	}*/
}