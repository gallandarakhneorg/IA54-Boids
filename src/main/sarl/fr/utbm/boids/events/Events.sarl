package fr.utbm.boids.events

import java.util.Collection
import fr.utbm.boids.agents.Boids
import fr.utbm.boids.Vector

event ConfigureSimulation {
	val mapSelection : int
	val boidsQuantity : int
	
	new(mS : int, bQ : int) {
		mapSelection = mS
		boidsQuantity = bQ
	}
}

event CreateMap
/* event pour prévenir l'environnement que le Boids est lancé
 */
event IsStarted

event MakeTheFiestaBegin

event DemandeDeplacement {

	var otherBoids : Collection<Boids>

	new (pos : Vector, otherBoids : Collection<Boids>) {
		this.otherBoids = otherBoids
	}

	new (x : int, y : int, otherBoids : Collection<Boids>) {
		this.otherBoids = otherBoids
	}
}

event ResultatDeplacement {
	var position : Vector

	new (pos : Vector) {
		this.position = pos
	}

	new (x : int, y : int) {
		this.position.setXY(x, y)
	}
}

event StartingSimulation {
	val nombreDePopulations : int
	val nombreDeBoidsParPopulation : int
	val visionBoids : int

	new(nombreDePopulations : int, nombreDeBoidsParPopulation : int, visionBoids : int) {
		this.nombreDePopulations = nombreDePopulations
		this.nombreDeBoidsParPopulation = nombreDeBoidsParPopulation
		this.visionBoids = visionBoids
	}
}

event EndSimulation



/* Events of the GUI only */

event BtnLaunch

event BtnShutdown
